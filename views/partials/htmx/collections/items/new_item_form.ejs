<% 
    const isErrorObj = typeof errorMessages === "object"; 
    const isExistingValues = typeof existingValues === "object";
    const isEditing = typeof editing === "boolean" && editing;
%>

<div id="collections-items-list-row" class="col-8 m-0 p-0">
    <div class="card h-100 border-end-0 rounded-0">
        <div class="card-header d-flex flex-row flex-start align-items-center">
            <div class="btn py-1 px-1"
                <% if (isEditing) { %>
                    <% const endpoint = `/collections/lists/${listID}/item/${itemID}`; %>
                    hx-get="<%= endpoint %>"
                    hx-push-url="false"
                <% } else { %>
                    <% const endpoint = `/collections/lists/${listID}`; %>
                    hx-get="<%= endpoint %>?onlyItems=true"
                    hx-push-url="<%= endpoint %>"
                <% } %>
                hx-target="#collections-items-list-row"
                hx-swap="outerHTML"
            >&lt;</div>
            New Item
        </div>
        <form class="card-body d-flex flex-column justify-content-center align-items-center"
            hx-post="/collections/lists/<%= listID %>"
            hx-target="#collections-items-list-row"
            hx-swap="outerHTML"
        >
            <h3 class="display-7 my-2">Creating Item</h3>
            <% if (isErrorObj && errorMessages.globalError) { %>
                <p class="text-centered text-danger mt-2"><%= errorMessages.globalError %></p>
            <% } %>
            <div class="form-floating w-100 my-2">
                <% const isItemNameError = isErrorObj && errorMessages?.name; %>
                <input class="form-control <%= isItemNameError ? 'is-invalid' : '' %>" type="text" name="name" id="new-item-name" placeholder="" value="<%= isExistingValues ? existingValues.name : '' %>">
                <label for="new-item-name">Item Name</label>
                <% if (isItemNameError) { %>
                    <div class="invalid-feedback"><%= errorMessages?.name %></div>
                <% } %>
            </div>

            <div class="form-floating w-100 my-2">
                <% const isItemUrlError = isErrorObj && errorMessages?.url; %>
                <input class="form-control <%= isItemUrlError ? 'is-invalid' : '' %>" type="url" name="url" id="new-item-url" placeholder="" value="<%= isExistingValues ? existingValues.url : '' %>">
                <label for="new-item-url">Item Url</label>
                <% if (isItemUrlError) { %>
                    <div class="invalid-feedback"><%= errorMessages?.url %></div>
                <% } %>
            </div>

            <% const isItemRatingError = isErrorObj && errorMessages?.rating; %>
            <div class="my-2 w-100">
            <div class="card <%= isItemRatingError ? 'border-danger':'' %> w-100">
                <div class="card-body">
                    <div class="mb-4 starability-basic">
                        <div class="form-label">Hello</div>
                        <input type="radio" name="rating" id="no-rate" <%= isExistingValues ? (existingValues.rating === "0" ? 'checked' : '') : 'checked' %> value="0">
                        <% for (let i = 0; i < 5; i++) { %>
                            <input type="radio" name="rating" id="first-rate<%= i+1 %>" value="<%= i+1 %>" <%= isExistingValues && existingValues.rating === (i+1).toString() ? 'checked' : '' %>>
                            <label for="first-rate<%= i+1 %>"><%= i+1 %> Star</label>
                        <% } %>

                    </div>
                </div>
            </div>
            <% if (isItemRatingError) { %>
                <div class="w-100 invalid-feedback d-block" style="font-size: 0.85rem;"><%= errorMessages?.rating %></div>
            <% } %>
            </div>

            <% for (let customColumn of listColumnsType) { %>
                <% let customColumnID = `customColumn_${customColumn.id}`; %>
                <% const isCustomRowError = isErrorObj && errorMessages[customColumn.id]; %>
                <% const customColumnValue = isExistingValues &&
                    existingValues?.customColumns.filter(c => c.ListColumnTypeID == customColumn.id || c.CustomRowItemsID == customColumn.id)[0];%>
                <div class="my-2 w-100 <%= customColumn.type.type === '@Stars' ? 'starability-basic' : 'form-floating' %>">
                    <% const customColumnName = `customColumns[${customColumnID}]`; %>
                    <% if (customColumn.type.type === "@Stars") { %>
                        <div class="form-label"><%= customColumn.name %></div>
                        <input type="radio" name="<%= customColumnName %>" id="<%= customColumnName %>-no-rate" checked value="0">
                        <% for (let indexStar = 0; indexStart < 5; indexStar++) { %>
                            <input class="first-rate<%= indexStar+1 %>" type="radio" name="<%= customColumnName %>" id="<%= customColumnName %>-rate<%= indexStar+1 %>" value="<%= indexStar+1 %>">
                            <label for="<%= customColumnName %>-rate<%= indexStar+1 %>"><%= indexStar+1 %> Star</label>
                        <% } %>
                    <% } else { %>
                        <input class="form-control <%= isCustomRowError ? 'is-invalid' : '' %>" <%- getCustomControlType(customColumn) %> name="<%= customColumnName %>" id="<%= customColumnID %>" placeholder="" value="<%= customColumnValue ? customColumnValue.Value : '' %>">
                        <label for="<%= customColumnID %>"><%= customColumn.name %></label>
                        <% if (isCustomRowError) { %>
                            <div class="invalid-feedback"><%= errorMessages[customColumn.id] %></div>
                        <% } %>
                    <% } %>
                </div>
            <% } %>

            <button class="btn btn-outline-secondary w-100 my-2" type="submit">Create</button>
        </form>
    </div>
</div>
